services:
  backend:
    build:
      context: ./src/backend
    container_name: financial-security-system-backend
    volumes:
      - ./src:/src
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  transaction-anomaly-detection:
    build:
      context: ./src/transaction-anomaly-detection
    container_name: financial-security-system-transaction-anomaly-detection
    environment:
      KAFKA_BROKERS: kafka:29092
    volumes:
      - ./src:/src
    depends_on:
      kafka:
        condition: service_healthy
    command: python src/main.py

  fraud-network-detection:
    build:
      context: ./src/fraud-network-detection
    container_name: financial-security-system-fraud-network-detection
    environment:
      KAFKA_BROKERS: kafka:29092
    volumes:
      - ./src:/src
    depends_on:
      kafka:
        condition: service_healthy
    command: python src/main.py

  credit-risk-scoring:
    build:
      context: ./src/credit-risk-scoring
    container_name: financial-security-system-credit-risk-scoring
    environment:
      KAFKA_BROKERS: kafka:29092
    volumes:
      - ./src:/src
    depends_on:
      kafka:
        condition: service_healthy
    command: python src/main.py

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: financial-security-system-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: financial-security-system-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  superset:
    build:
      context: ./src/superset
    container_name: financial-security-system-superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_SECRET_KEY: 'XeJUnIEM4SxzzxsXIAQk9jaVlQOPyBG0vYchO8iHZIACet/BMiS36E2x'
      SUPERSET_DATABASE_URI: postgresql+psycopg2://superset:superset@superset-db:5432/superset
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@superset.com
      ADMIN_PASSWORD: admin
    depends_on:
      - superset-db
    volumes:
      - superset_home:/app/superset_home

  superset-db:
    image: postgres:17
    container_name: financial-security-system-superset-db
    environment:
      POSTGRES_DB: superset
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
    volumes:
      - superset_db_data:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5
    container_name: financial-security-system-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - neo4j_data:/data

  clickhouse:
    image: clickhouse:25.3
    container_name: financial-security-system-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

volumes:
  superset_db_data:
  superset_home:
  neo4j_data:
  clickhouse_data:
